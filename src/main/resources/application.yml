spring:
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            scope:
              - email
              - profile

          naver:
            client-id: ${NAVER_ID}
            client-secret: ${NAVER_SECRET}
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  batch:
    job:
      names: ${job.name:NONE}
      enabled: false # 프로젝트가 실행될 떄 파라미터가 존재하더라도 위에 job 실행X
    jdbc:
      initialize-schema: always
jwt:
  header: ${JWT_HEADER}
  secret: ${JWT_SECRET}
  token-validity-in-seconds: 86400
  token_prefix: Bearer

